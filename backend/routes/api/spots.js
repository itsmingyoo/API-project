const express = require("express");
const { Op } = require("sequelize");
const { Spot, User, SpotImage, sequelize, Review } = require("../../db/models");
const { getCurrentUser } = require("../../utils/auth");
const router = express.Router();

// 1. get all spots
router.get("/", async (req, res) => {
  let where = {};

  let allSpots = await Spot.findAll({
    attributes: [
      "id",
      "ownerId",
      "address",
      "city",
      "state",
      "country",
      "lat",
      "lng",
      "name",
      "description",
      "price",
      "createdAt",
      "updatedAt",
      [sequelize.fn("AVG", sequelize.col("stars")), "avgRating"],
    ],
    where,
    include: [{ model: Review, attributes: [] }],
    group: "Reviews.id",
  });
  //   allSpots = allSpots.map((spot) => {
  //     spot = spot.toJSON();
  //     spot.previewImage = "image url";
  //   });
  console.log(allSpots);

  res.json(allSpots);
});

// 2. Get all spots owned by current user
// router.get("/spots/current", async (req, res) => {
//   const findSpot = await Spot.findAll({
//     //proper syntax for include if you want to use this
//     // include: {
//     //   model: SpotImage,
//     //   attributes: ["preview"],
//     // },
//   });
//   console.log("hellooooooo", findSpot);
//   res.json(findSpot);
// });

// 3. Create a Spot
router.post("/", getCurrentUser, async (req, res) => {
  const { address, city, state, country, lat, lng, name, description, price } =
    req.body;
  if (
    !address ||
    !city ||
    !state ||
    !country ||
    !lat ||
    !lng ||
    !name ||
    !description ||
    !price
  ) {
    res.statusCode = 400;
    res.json({
      message: "Bad Request", // (or "Validation error" if generated by Sequelize),
      errors: {
        address: "Street address is required",
        city: "City is required",
        state: "State is required",
        country: "Country is required",
        lat: "Latitude is not valid",
        lng: "Longitude is not valid",
        name: "Name must be less than 50 characters",
        description: "Description is required",
        price: "Price per day is required",
      },
    });
  }
  const ownerId = req.currentUser.data.id;
  const newSpot = await Spot.create({
    ownerId,
    address,
    city,
    state,
    country,
    lat,
    lng,
    name,
    description,
    price,
  });
  res.json(newSpot);
});

module.exports = router;
